//INT_MAX表示最大的INT 
//这题使用了辅助栈
class MinStack {
public:
    stack<int> s;
    stack<int> min_s;
    /** initialize your data structure here. */
    MinStack() 
    {
        min_s.push(INT_MAX);
    }
    
    void push(int x) 
    {

        s.push(x);
        min_s.push(min(min_s.top(), x));
    }
    
    void pop() {
        if(!s.empty())
        {        
            s.pop();
            min_s.pop();
        }
        
    }
    
    int top() 
    {
        if(!s.empty())
        {
            return s.top();
        }
        else return -1;
    }
    
    int getMin() 
    {
        if(!s.empty())
        {
        return min_s.top();
        }
        else return -1;

    }
};
